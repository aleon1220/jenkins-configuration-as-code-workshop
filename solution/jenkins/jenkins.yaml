configuration-as-code:
  version: 1
  deprecated: warn
  restricted: reject

jenkins:
  systemMessage: |-
    Welcome to Jenkins!    ٩(◕‿◕)۶
    This Jenkins was configured with Jenkins Configuration as Code plugin.
    You can freely modify its configuration without repercussion.
  numExecutors: 2
  labelString: "jenkins-label"
  authorizationStrategy:
    globalMatrix:
      grantedPermissions:
        - "Job/Build:authenticated"
        - "Job/Cancel:authenticated"
        - "Job/Read:authenticated"
        - "Overall/Administer:Acme Superusers"
        - "Overall/Read:authenticated"
        - "View/Read:authenticated"
  securityRealm:
    ldap:
      configurations:
      - groupSearchFilter: "(& (cn={0}) (objectclass=posixGroup) )"
        inhibitInferRootDN: false
        managerDN: "cn=service,ou=Users,dc=acme,dc=local"
        managerPasswordSecret: ${LDAP_SERVICE_PASSWORD}
        rootDN: "dc=acme,dc=local"
        server: "ldap://slapd:389"
      disableMailAddressResolver: false
      disableRolePrefixing: true
      groupIdStrategy: "caseInsensitive"
      userIdStrategy: "caseInsensitive"
  remotingSecurity:
    enabled: true
  agentProtocols:
  - "JNLP4-connect"
  - "Ping"
  slaveAgentPort: 50000
  nodes:
  - permanent:
      name: "agent-java"
      labelString: "java-label"
      numExecutors: 2
      remoteFS: "/opt/jenkins_workspace/"
      launcher:
        ssh:
          credentialsId: "GITHUB_SSH_KEY"
          host: "agent-java"
          port: 22
          sshHostKeyVerificationStrategy:
            manuallyTrustedKeyVerificationStrategy:
              requireInitialManualTrust: false
      retentionStrategy: "always"

tool:
  git:
    installations:
      - name: Default
        home: "git"
  maven:
    installations:
    - name: "maven-3"
      properties:
      - installSource:
          installers:
          - maven:
              id: "3.6.1"

credentials:
  system:
    domainCredentials:
    - credentials:
      - basicSSHUserPrivateKey:
          scope: GLOBAL
          passphrase: ${JENKINS_SSH_PRIVATE_KEY_PASSWORD}
          id: "GITHUB_SSH_KEY"
          description: "This SSH private key is needed to establish connection to GitHub."
          privateKeySource:
            directEntry:
              privateKey: ${JENKINS_SSH_PRIVATE_KEY}
      - usernamePassword:
          id: "NEXUS_USER"
          password: ${NEXUS_USERPASSWORD}
          scope: GLOBAL
          username: ${NEXUS_USERNAME}

security:
  queueItemAuthenticator:
    authenticators:
    - global:
        strategy: "triggeringUsersAuthorizationStrategy"

unclassified:
  location:
    adminAddress: "Leonard Sheng Sheng Lee <leonard.sheng.sheng.lee@gmail.com>"
    url: "http://localhost:8080"
  globalLibraries:
    libraries:
      - name: "shared-pipeline-library"
        allowVersionOverride: true
        defaultVersion: "master"
        includeInChangesets: true
        retriever:
          modernSCM:
            scm:
              git:
                remote: "git@github.com:sheeeng/jenkins-configuration-as-code-shared-pipeline-library.git"
                credentialsId: "GITHUB_SSH_KEY"

jobs:
  - script: |
      folder('germ') {
        multibranchPipelineJob('germ/seed-job') {
          description(
            '\nInitial seed job to populate other predefined jobs for Jenkins.'
          )
          configure {
            it / sources / 'data' / 'jenkins.branch.BranchSource' << {
              source(class: 'jenkins.plugins.git.GitSCMSource') {
                credentialsId('GITHUB_SSH_KEY')
                remote('git@github.com:sheeeng/jenkins-configuration-as-code-seed-job.git')
                traits {
                    'jenkins.plugins.git.traits.BranchDiscoveryTrait'()
                    'jenkins.scm.impl.trait.WildcardSCMHeadFilterTrait' {
                      includes('master')
                      excludes('') // Needs to be set for trait to work
                    }
                }
              }
              strategy(class: 'jenkins.branch.DefaultBranchPropertyStrategy') {
                properties(class: 'java.util.Arrays\$ArrayList') {
                  a(class: 'jenkins.branch.BranchProperty-array') {
                    'jenkins.branch.NoTriggerBranchProperty'()
                  }
                }
              }
            }
          }
        }
      }
